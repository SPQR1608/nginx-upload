server {
    listen 80;

    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/app;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PHP_VALUE	"max_execution_time = 0";
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }

    # настройка nginx-upload модуля
    # сюда будут отправляться данные из POST форм
    location = /upload/share {

      client_max_body_size 2024M;
      upload_buffer_size 10M;

      # указываем бэкенд, который выполнится уже после загрузки данных
      # это может быть ваш PHP скрипт для управления файлами
      # и директорию, куда сохраняются загруженные файлы
      upload_pass /var/www/app;
      upload_store /var/www/files;
      upload_state_store /var/www/tmp;

      # Возобновляемые загрузки
      upload_resumable on;

      upload_tame_arrays on;

      upload_store_access user:rw group:rw all:rw;
      # укажем, какие дополнительные данные передать бэкенду

      #upload_set_form_field $upload_field_name.name "$upload_file_name";
      #upload_set_form_field $upload_field_name.content_type "$upload_content_type";
      #upload_set_form_field $upload_field_name.path "$upload_tmp_path";
      #upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
      #upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

      set $upload_field_name "file";

      upload_set_form_field "${upload_field_name}_name[]" "$upload_file_name";
      upload_set_form_field "${upload_field_name}_path[]" "$upload_tmp_path";
      upload_set_form_field "${upload_field_name}_content_type[]" "$upload_content_type";
      upload_aggregate_form_field "${upload_field_name}_size[]" "$upload_file_size";
      upload_aggregate_form_field "${upload_field_name}_number[]" "$upload_file_number";

      upload_pass_args on;

      # в случае возникновения этих ошибок файлы будут удалены
      upload_cleanup 400 404 499 500-505;

      # урезаем скорость
      # это мне необходимо для долгой загрузки файлов
      # чтобы дебажить скрипт и успеть налюбоваться на процесс загрузки
      # upload_limit_rate 1421k;
      #upload_limit_rate 20000k;

      # включаем информирование для "upload" (см. в начале)
      track_uploads upload 1m;
    }

    # сюда приходят ajax-запросы со страницы
    location = /upload/status {
      upload_progress_json_output;
      # информируем их о процессе загрузки
      report_uploads upload;
    }
}