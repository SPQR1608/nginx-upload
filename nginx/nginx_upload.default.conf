server {
    listen 80;

    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/app;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }

    # настройка nginx-upload модуля
    # сюда будут отправляться данные из POST форм
    location = /upload/share {

      # увеличиваем лимит на размер загружаемых данных
      client_max_body_size 250m;

      # указываем бэкенд, который выполнится уже после загрузки данных
      # это может быть ваш PHP скрипт для управления файлами
      # и директорию, куда сохраняются загруженные файлы
      upload_pass /var/www/app;
      upload_store /var/www/files;

      # укажем, какие дополнительные данные передать бэкенду
      upload_set_form_field $upload_field_name.name "$upload_file_name";
      upload_set_form_field $upload_field_name.content_type "$upload_content_type";
      upload_set_form_field $upload_field_name.path "$upload_tmp_path";

      upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
      upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

      # в случае возникновения этих ошибок файлы будут удалены
      upload_cleanup 400 404 499 500-505;

      # урезаем скорость
      # это мне необходимо для долгой загрузки файлов
      # чтобы дебажить скрипт и успеть налюбоваться на процесс загрузки
      upload_limit_rate 8k;

      # включаем информирование для "upload" (см. в начале)
      track_uploads upload 1m;
    }

    # сюда приходят ajax-запросы со страницы
    location = /upload/status {

      # информируем их о процессе загрузки
      report_uploads upload;
    }

    # Allow file uploads max 1024M for example
    client_max_body_size 2024M;
    upload_buffer_size 10M;

    # POST URL
    location /upload {
        # Pass altered request body to this location
        upload_pass @after_upload;

        # Store files to this directory
        upload_store /tmp/nginx_upload/;

        # Allow uploaded files to be world readable
        upload_store_access user:rw group:rw all:r;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field $upload_field_name.md5 "$upload_file_md5";
        upload_aggregate_form_field $upload_field_name.size "$upload_file_size";

        upload_pass_form_field "^newfilename$|^market$";

        upload_cleanup 400 404 499 500-505;
    }

    location @after_upload {
        add_header Content-Type "text/plain;charset=utf-8";
        return 200 "upload success, and you can find the file at docker continaer path /tmp/nginx_upload/";
    }
}